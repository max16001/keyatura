#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 220
#define U_QUICK_TAP 200

/ {
    combos {
        compatible = "zmk,combos";

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <2 3>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 23>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <11 12>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping-term-ms = <U_TAPPING_TERM>;
            quick-tap-ms = <U_QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q  &kp W              &kp E              &kp R            &kp T           &kp Y             &kp U           &kp I      &kp O    &kp P
&kp A  &kp S              &kp D              &kp F            &kp G           &kp H             &kp J           &kp K      &kp L    &kp SEMI
&kp Z  &kp X              &kp C              &kp V            &kp B           &kp N             &kp M           &kp COMMA  &kp DOT  &kp FSLH
       &u_mt LCTRL ENTER  &u_mt LSHFT SPACE  &lt 2 BACKSPACE  &u_mt LWIN TAB  &u_mt LALT GRAVE  &u_lt 1 ESCAPE
            >;
        };

        NAV {
            bindings = <
&kp N6    &kp N7             &kp N8             &kp N9                &kp N0        &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PRINTSCREEN  &out OUT_TOG
&kp N1    &kp N2             &kp N3             &kp N4                &kp N5        &kp LEFT_ARROW    &kp DOWN           &kp UP_ARROW     &kp RIGHT        &bt BT_NXT
&kp PLUS  &kp ASTERISK       &kp EQUAL          &kp MINUS             &kp DOT       &kp HOME          &kp PAGE_DOWN      &kp PG_UP        &kp END          &kp BACKSLASH
          &u_mt LCTRL ENTER  &u_mt LSHFT SPACE  &u_mt LALT BACKSPACE  &kp LEFT_WIN  &trans            &trans
            >;
        };

        F_layer {
            bindings = <
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &studio_unlock  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR   &msc SCRL_LEFT
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp AMPS        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE    &kp SINGLE_QUOTE
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &kp ASTERISK    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT  &msc SCRL_RIGHT
         &trans   &trans   &trans   &trans   &msc SCRL_UP    &msc SCRL_DOWN
            >;
        };

        SNIPER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &mo 3   &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
